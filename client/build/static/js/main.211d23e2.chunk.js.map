{"version":3,"sources":["components/search-form/SearchForm.component.js","components/book-card/BookCard.component.js","utils/helpers.js","pages/search/Search.view.js","constants.js","actions.js","pages/search/Search.container.js","pages/search/Search.js","pages/search/index.js","pages/saved/Saved.view.js","pages/saved/Saved.container.js","pages/saved/Saved.js","pages/index.js","App.js","serviceWorker.js","reducer.js","store.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","display","SearchFormComponent","props","classes","useState","searchQuery","setSearchQuery","className","noValidate","autoComplete","TextField","id","label","style","helperText","fullWidth","onChange","e","preventDefault","stopPropagation","target","value","Button","variant","color","onClick","handleSearchBook","cardGrid","paddingTop","paddingBottom","card","height","flexDirection","cardMedia","cardContent","flexGrow","BookCard","book","isSaved","handleRemoveBook","handleSaveBook","Grid","item","xs","sm","md","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","component","CardActions","Link","href","link","rel","size","_id","conditionalActionRendering","getLastBooks","allBooks","numElem","reverse","slice","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","navLink","noBooks","footer","Copyright","align","Date","getFullYear","HomePage","Fragment","CssBaseline","AppBar","position","Toolbar","noWrap","Container","maxWidth","paragraph","container","justify","displayRecentSaved","books","length","map","index","key","RenderBookCard","getAllSavedBooks","dispatch","getState","type","isFetchingBooks","axios","get","then","response","status","payload","data","catch","error","searchFailed","message","removeBookById","bookid","isRemovingBook","delete","removeFailure","SearchContainer","useDispatch","useSelector","appState","useEffect","bookId","query","cleanQuery","replace","toLowerCase","apiData","items","isAddingBook","authors","volumeInfo","description","imageLinks","thumbnail","infoLink","searchGAPIFailure","searchGAPIBook","matchBook","filter","elem","post","addBookFailure","Search","SavedPage","SavedContainer","Saved","SearchBooks","SavedBooks","App","exact","path","Pages","Boolean","window","location","hostname","match","initialState","isRemovinBook","store","createStore","state","action","compose","applyMiddleware","thunk","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"gSAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,QAAS,aAKA,SAASC,EAAoBC,GAC1C,IAAMC,EAAUT,IADiC,EAEXU,mBAAS,IAFE,mBAE1CC,EAF0C,KAE7BC,EAF6B,KAWjD,OACE,0BAAMC,UAAWJ,EAAQN,KAAMW,YAAU,EAACC,aAAa,OACnD,yBAAKF,UAAWJ,EAAQN,MACpB,kBAACa,EAAA,EAAD,CACAC,GAAG,UACHC,MAAM,QACNC,MAAO,CAAEf,OAAQ,GACjBgB,WAAW,wCACXC,WAAS,EACTjB,OAAO,SAEPkB,SAlBgB,SAACC,GAEzBA,EAAEC,iBACFD,EAAEE,kBACFb,EAAeW,EAAEG,OAAOC,UAgBhB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASvB,EAAMwB,iBAAiBrB,IAA5E,Y,wCC3BNX,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+B,SAAU,CACRC,WAAYhC,EAAMG,QAAQ,GAC1B8B,cAAejC,EAAMG,QAAQ,IAE/B+B,KAAM,CACJC,OAAQ,OACR/B,QAAS,OACTgC,cAAe,UAEjBC,UAAW,CACTL,WAAY,UAEdM,YAAa,CACXC,SAAU,OAmCD,SAASC,EAASlC,GAAQ,IAC7BmC,EAAoDnC,EAApDmC,KAAMC,EAA8CpC,EAA9CoC,QAASC,EAAqCrC,EAArCqC,iBAAkBC,EAAmBtC,EAAnBsC,eACnCrC,EAAUT,IAEhB,OACI,kBAAC+C,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,EAAA,EAAD,CAAMvC,UAAWJ,EAAQ2B,MACrB,kBAACiB,EAAA,EAAD,CACAxC,UAAWJ,EAAQ8B,UAEnBe,MAAOX,EAAKW,MACZC,MAAM,gBAEN,kBAACC,EAAA,EAAD,CAAa3C,UAAWJ,EAAQ+B,aAChC,kBAACiB,EAAA,EAAD,CAAYC,cAAY,EAAC7B,QAAQ,KAAK8B,UAAU,MAC3ChB,EAAKY,QA9CS,SAACX,EAASD,EAAME,EAAkBC,GACnE,OAAGF,EAEC,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAM/B,MAAM,UAAUgC,KAAMnB,EAAKoB,KAAMrC,OAAO,SAASsC,IAAI,YACzD,kBAACpC,EAAA,EAAD,CAAQqC,KAAK,QAAQnC,MAAM,WAA3B,cAIF,kBAACF,EAAA,EAAD,CAAQqC,KAAK,QAAQnC,MAAM,UAAUC,QAASc,EAAiBF,EAAKuB,MAApE,WAQF,kBAACN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAM/B,MAAM,UAAUgC,KAAMnB,EAAKoB,KAAMrC,OAAO,SAASsC,IAAI,YACzD,kBAACpC,EAAA,EAAD,CAAQqC,KAAK,QAAQnC,MAAM,WAA3B,cAIF,kBAACF,EAAA,EAAD,CAAQqC,KAAK,QAAQnC,MAAM,UAAUC,QAASe,EAAeH,EAAK1B,KAAlE,SA6BUkD,CAA2BvB,EAASD,EAAME,EAAkBC,KCjFvE,IAAMsB,EAAe,SAACC,EAAUC,GACnC,OAAOD,EAASE,UAAUC,MAAM,EAAGF,ICcjCtE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuE,KAAM,CACJC,YAAaxE,EAAMG,QAAQ,IAE7BsE,YAAa,CACXC,gBAAiB1E,EAAM2E,QAAQC,WAAWC,MAC1CC,QAAS9E,EAAMG,QAAQ,EAAG,EAAG,IAE/B4E,YAAa,CACXC,UAAWhF,EAAMG,QAAQ,IAE3B4B,SAAU,CACRC,WAAYhC,EAAMG,QAAQ,GAC1B8B,cAAejC,EAAMG,QAAQ,IAE/B+B,KAAM,CACJC,OAAQ,OACR/B,QAAS,OACTgC,cAAe,UAEjBC,UAAW,CACTL,WAAY,UAEdM,YAAa,CACXC,SAAU,GAEZ0C,QAAS,CACPH,QAAS,QAEXI,QAAS,CACPF,UAAWhF,EAAMG,QAAQ,IAE3BgF,OAAQ,CACNT,gBAAiB1E,EAAM2E,QAAQC,WAAWC,MAC1CC,QAAS9E,EAAMG,QAAQ,QAK3B,SAASiF,IACP,OACE,kBAAC7B,EAAA,EAAD,CAAY5B,QAAQ,QAAQC,MAAM,gBAAgByD,MAAM,UACrD,kBACD,kBAAC1B,EAAA,EAAD,CAAM/B,MAAM,UAAUgC,KAAK,KAA3B,0BAEQ,KACP,IAAI0B,MAAOC,cACX,KA8BQ,SAASC,EAASlF,GAC/B,IAAMC,EAAUT,IAEhB,OACE,kBAAC,IAAM2F,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KAEI,kBAAC,IAAD,CAAclF,UAAWJ,EAAQgE,OACjC,kBAAChB,EAAA,EAAD,CAAY5B,QAAQ,KAAKC,MAAM,UAAUkE,QAAM,GAA/C,uBAIA,kBAACvC,EAAA,EAAD,CAAYE,UAAU,IAAI7B,MAAM,UAAUkE,QAAM,GAC9C,kBAACnC,EAAA,EAAD,CAAMhD,UAAWJ,EAAQ0E,QAASrD,MAAM,UAAUgC,KAAK,UAAvD,kBAIR,8BAEE,yBAAKjD,UAAWJ,EAAQkE,aACtB,kBAACsB,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACzC,EAAA,EAAD,CAAYE,UAAU,KAAK9B,QAAQ,KAAK0D,MAAM,SAASzD,MAAM,cAAc4B,cAAY,GAAvF,kBAGA,kBAACD,EAAA,EAAD,CAAY5B,QAAQ,KAAK0D,MAAM,SAASzD,MAAM,gBAAgBqE,WAAS,GAAvE,mIAKA,kBAACpD,EAAA,EAAD,CAAMqD,WAAS,EAAC/F,QAAS,EAAGgG,QAAQ,UAClC,kBAACtD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CACEjB,iBAAkBxB,EAAMwB,uBAMlC,kBAACiE,EAAA,EAAD,CAAWpF,UAAWJ,EAAQwB,SAAUiE,SAAS,MAC9C1F,EAAM8F,mBACJ,kBAAC7C,EAAA,EAAD,CAAYE,UAAU,KAAK9B,QAAQ,KAAK0D,MAAM,OAAOzD,MAAM,gBAAgB4B,cAAY,GAAvF,wBAGD,kBAACD,EAAA,EAAD,CAAYE,UAAU,KAAK9B,QAAQ,KAAK0D,MAAM,OAAOzD,MAAM,gBAAgB4B,cAAY,GAAvF,kBAIF,kBAACX,EAAA,EAAD,CAAMqD,WAAS,EAAC/F,QAAS,GA1EnC,SAAwBkG,EAAOD,EAAoBzD,EAAkBC,GACnE,IAAMrC,EAAUT,IAChB,OAAGuG,EAAMC,OAAS,EACbF,EACOlC,EAAamC,EAAO,GAAGE,KAAI,SAAC9D,EAAM+D,GAAP,OACjC,kBAAChE,EAAD,CAAUiE,IAAKD,EAAO/D,KAAMA,EAAMC,QAAS0D,EAAoBzD,iBAAkBA,EAAkBC,eAAgBA,OAI7GyD,EAAME,KAAI,SAAC9D,EAAM+D,GAAP,OAChB,kBAAChE,EAAD,CAAUiE,IAAKD,EAAO/D,KAAMA,EAAMC,QAAS0D,EAAoBzD,iBAAkBA,EAAkBC,eAAgBA,OAOrH,kBAACW,EAAA,EAAD,CAAY5C,UAAWJ,EAAQ2E,QAASzB,UAAU,IAAI4B,MAAM,OAAOzD,MAAM,iBAAzE,0CA0DO8E,CAAepG,EAAM+F,MAAO/F,EAAM8F,mBAAoB9F,EAAMqC,iBAAkBrC,EAAMsC,mBAK3F,4BAAQjC,UAAWJ,EAAQ4E,QACzB,kBAACC,EAAD,QCpJD,I,iBCuBMuB,EAAmB,WAC5B,OAAO,SAACC,EAAUC,GAEhBD,EAAS,CACLE,KD3B2B,wBC4B3BC,iBAAiB,IAGrBC,IACGC,IAAI,cACJC,MAAM,SAACC,GAEiB,MAApBA,EAASC,QACVR,EA3B2B,CACnCE,KDTiC,wBCUjCC,iBAAiB,EACjBM,QAwB+BF,EAASG,UAGnCC,OAAO,SAACC,GACPZ,EAxBW,SAACY,GAAD,MAAY,CAC/BV,KDfmC,wBCgBnCC,iBAAiB,EACjBM,QAASG,GAqBQC,CAAaD,EAAME,eAuBzBC,EAAiB,SAACC,GAC7B,OAAO,SAAChB,EAAUC,GAEhBD,EAAS,CACLE,KD/D6B,wBCgE7Be,gBAAgB,IAGpBb,IACGc,OAAO,cAAgBF,GACvBV,MAAM,SAACC,GAEiB,MAApBA,EAASC,SACVR,EA7BmB,CAC3BE,KD3CmC,wBC4CnCe,gBAAgB,EAChBd,iBAAiB,EACjBM,QAAS,KA0BDT,EAASD,SAGZY,OAAO,SAACC,GACPZ,EA3Bc,SAACY,GAAD,MAAY,CAChCV,KDjDmC,wBCkDnCe,gBAAgB,EAChBd,iBAAiB,EACjBM,QAASG,GAuBMO,CAAcP,EAAME,eChCtBM,MA3Cf,WACI,IAAMpB,EAAWqB,cADM,EAGaC,aAAY,SAACC,GAAD,MAAc,CAC1DA,EAAS9B,MACT8B,EAAS/B,uBALU,mBAGhBC,EAHgB,KAGTD,EAHS,KAiCvB,OAzBAgC,qBAAU,WAENxB,EAASD,OAEV,IAsBH,kBAACnB,EAAD,CACIa,MAAOA,EACP1D,iBArBqB,SAAC0F,GAAD,OAAY,SAAChH,GAClCA,EAAEC,iBACFsF,EAASe,EAAeU,MAoBxBvG,iBAjBqB,SAACrB,GAAD,OAAiB,SAACY,GACvCA,EAAEC,iBACFsF,EDuHsB,SAAC0B,GAC7B,IAAMC,EAAaD,EAAME,QAAQ,OAAQ,KAAKC,cAC9C,OAAO,SAAC7B,EAAUC,GAEhBD,EAAS,CACLE,KD3IgC,2BC4IhCC,iBAAiB,IAGrBC,IACGC,IAAI,iDAAmDsB,EAAnD,gDACJrB,MAAM,SAACC,GA7BY,IH7HIuB,EG4JC,MAApBvB,EAASC,QAEVR,GH9JoB8B,EG8JqBvB,EAASG,KAAKqB,MAjCtB,CACzC7B,KDpHsC,2BCqHtCe,gBAAgB,EAChBd,iBAAiB,EACjB6B,cAAc,EACdxC,oBAAoB,EACpBiB,QHlIkBqB,EAAQnC,KAAI,SAACzD,EAAK0D,GAC9B,MAAO,CACHzF,GAAI+B,EAAK/B,GACT8H,QAAS/F,EAAKgG,WAAWD,QACzBE,YAAajG,EAAKgG,WAAWC,YAC7B3F,MAAON,EAAKgG,WAAWE,WAAWC,UAClCpF,KAAMf,EAAKgG,WAAWI,SACtB7F,MAAOP,EAAKgG,WAAWzF,gBGyJ5BkE,OAAO,SAACC,GACPZ,EA5BkB,SAACY,GAAD,MAAY,CACpCV,KD5HsC,2BC6HtCe,gBAAgB,EAChBd,iBAAiB,EACjB6B,cAAc,EACdxC,oBAAoB,EACpBiB,QAASG,GAsBM2B,CAAkB3B,EAAME,cC1IxB0B,CAAe3I,MAgBxB2F,mBAAoBA,EACpBxD,eAdmB,SAACyF,GAAD,OAAY,SAAChH,GAChCA,EAAEC,iBACF,IDsEuBmB,ECtEjB4G,EAAYhD,EAAMiD,QAAO,SAACC,GAC5B,OAAOA,EAAKxI,KAAOsH,KAEvBzB,GDmEuBnE,ECnEC4G,EAAU,GDoEjC,SAACzC,EAAUC,GAEhBD,EAAS,CACLE,KDnG0B,qBCoG1B8B,cAAc,IAGlB5B,IACGwC,KAAK,cAAe/G,GACpByE,MAAM,SAACC,GAEiB,MAApBA,EAASC,QACVR,EA7BoB,CAC5BE,KD/EgC,qBCgFhCe,gBAAgB,EAChBd,iBAAiB,EACjB6B,cAAc,EACdvB,QAAS,QA2BJE,OAAO,SAACC,GACPZ,EAzBe,SAACY,GAAD,MAAY,CACjCV,KDtFgC,qBCuFhCe,gBAAgB,EAChBd,iBAAiB,EACjB6B,cAAc,EACdvB,QAASG,GAoBMiC,CAAejC,EAAME,qBEjHvBgC,ICLAA,EDCf,WACE,OAAO,kBAAC,EAAD,OEUH5J,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuE,KAAM,CACJC,YAAaxE,EAAMG,QAAQ,IAE7BsE,YAAa,CACXC,gBAAiB1E,EAAM2E,QAAQC,WAAWC,MAC1CC,QAAS9E,EAAMG,QAAQ,EAAG,EAAG,IAE/B4E,YAAa,CACXC,UAAWhF,EAAMG,QAAQ,IAE3B8E,QAAS,CACPH,QAAS,QAEX/C,SAAU,CACRC,WAAYhC,EAAMG,QAAQ,GAC1B8B,cAAejC,EAAMG,QAAQ,IAE/B+B,KAAM,CACJC,OAAQ,OACR/B,QAAS,OACTgC,cAAe,UAEjBC,UAAW,CACTL,WAAY,UAEdM,YAAa,CACXC,SAAU,GAEZ2C,QAAS,CACPF,UAAWhF,EAAMG,QAAQ,IAE3BgF,OAAQ,CACNT,gBAAiB1E,EAAM2E,QAAQC,WAAWC,MAC1CC,QAAS9E,EAAMG,QAAQ,QAK3B,SAASiF,IACP,OACE,kBAAC7B,EAAA,EAAD,CAAY5B,QAAQ,QAAQC,MAAM,gBAAgByD,MAAM,UACrD,kBACD,kBAAC1B,EAAA,EAAD,CAAM/B,MAAM,UAAUgC,KAAK,KAA3B,0BAEQ,KACP,IAAI0B,MAAOC,cACX,KAOQ,SAASoE,EAAUrJ,GAChC,IAAMC,EAAUT,IAEhB,OACE,kBAAC,IAAM2F,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KAEI,kBAAC,IAAD,CAAclF,UAAWJ,EAAQgE,OACjC,kBAAChB,EAAA,EAAD,CAAY5B,QAAQ,KAAKC,MAAM,UAAUkE,QAAM,GAA/C,uBAIF,kBAACvC,EAAA,EAAD,CAAYE,UAAU,IAAI7B,MAAM,UAAUkE,QAAM,GAC5C,kBAACnC,EAAA,EAAD,CAAMhD,UAAWJ,EAAQ0E,QAASrD,MAAM,UAAUgC,KAAK,KAAvD,WAIR,8BACE,kBAACmC,EAAA,EAAD,CAAWpF,UAAWJ,EAAQwB,SAAUiE,SAAS,MAC/C,kBAACzC,EAAA,EAAD,CAAYE,UAAU,KAAK9B,QAAQ,KAAK0D,MAAM,OAAOzD,MAAM,gBAAgB4B,cAAY,GAAvF,mBAGA,kBAACX,EAAA,EAAD,CAAMqD,WAAS,EAAC/F,QAAS,GACrBG,EAAM+F,MAAMC,OAAS,EACvBpC,EAAa5D,EAAM+F,MAAO,GAAGE,KAAI,SAAC9D,EAAM+D,GAAP,OAC/B,kBAAChE,EAAD,CAAUiE,IAAKD,EAAO/D,KAAMA,EAAMC,SAAS,EAAMC,iBAAkBrC,EAAMqC,sBAE3E,kBAACY,EAAA,EAAD,CAAY5C,UAAWJ,EAAQ2E,QAASzB,UAAU,IAAI4B,MAAM,OAAOzD,MAAM,iBAAzE,6CAON,4BAAQjB,UAAWJ,EAAQ4E,QACzB,kBAAC,EAAD,QCtEOyE,MA7Bf,WACI,IAAMhD,EAAWqB,cADK,EAGNC,aAAY,SAACC,GAAD,MAAc,CACtCA,EAAS9B,UADNA,EAHe,oBA0BtB,OAnBA+B,qBAAU,WAENxB,EAASD,OAEV,IAeI,kBAACgD,EAAD,CAAWtD,MAAOA,EAAO1D,iBAZP,SAAC0F,GAAD,OAAY,SAAChH,GAClCA,EAAEC,iBAEFsF,EAASe,EAAeU,MASwCzF,eAN7C,SAACH,GAAD,OAAU,SAACpB,GAC9BA,EAAEC,sBCpBKuI,ICJA,GACXC,cACAC,WDFJ,WACE,OAAO,kBAAC,EAAD,QEYMC,MAZf,WAEE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIzG,UAAW0G,EAAML,cACvC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,SAASzG,UAAW0G,EAAMJ,gBCEhCK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCbOC,EAAe,CACxB1D,iBAAiB,EACjB2D,eAAe,EACftE,oBAAoB,EACpBC,MAAO,GACPmB,MAAO,I,gBCCImD,EANDC,uBDQC,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC7C,OAAQA,EAAOhE,MACX,IXf6B,wBWgBzB,OAAO,2BAAI+D,GAAX,IAAkB9D,iBAAiB,EAAMV,MAAO,GAAImB,MAAO,KAE/D,IXjB6B,wBWkBzB,OAAO,2BAAIqD,GAAX,IAAkB9D,iBAAiB,EAAOV,MAAOyE,EAAOzD,QAASG,MAAO,KAE5E,IXnB6B,wBWoBzB,OAAO,2BAAIqD,GAAX,IAAkB9D,iBAAiB,EAAOV,MAAO,GAAImB,MAAOsD,EAAOzD,UAEvE,IXpB6B,wBWqBzB,OAAO,2BAAIwD,GAAX,IAAkBhD,eAAgBiD,EAAOjD,eAAgBL,MAAO,KAEpE,IXtB6B,wBWuBzB,OAAO,eAAIqD,GAEf,IXxB6B,wBWyBzB,OAAO,2BAAIA,GAAX,IAAkB9D,iBAAiB,EAAOc,eAAgBiD,EAAOjD,eAAgBL,MAAOsD,EAAOzD,UAEnG,IXzB0B,qBW4B1B,IX3B0B,qBW4BtB,OAAO,2BAAIwD,GAAX,IAAkBjC,aAAckC,EAAOlC,aAAcpB,MAAO,KAEhE,IX7B0B,qBW8BtB,OAAO,2BAAIqD,GAAX,IAAkBjC,aAAckC,EAAOlC,aAAcpB,MAAOsD,EAAOzD,UAEvE,IX7BgC,2BW8B5B,OAAO,2BAAIwD,GAAX,IAAkB9D,gBAAiB+D,EAAO/D,kBAE9C,IX/BgC,2BWgC5B,OAAO,2BAAI8D,GAAX,IAAkB9D,gBAAiB+D,EAAO/D,gBAAiBX,mBAAoB0E,EAAO1E,mBAAoBC,MAAOyE,EAAOzD,UAE5H,IXjCgC,2BWkC5B,OAAO,2BAAIwD,GAAX,IAAkB9D,iBAAiB,EAAOc,gBAAgB,EAAOzB,oBAAoB,EAAMoB,MAAOsD,EAAOzD,UAE7G,QACI,OAAOwD,KC7CjBJ,EACAM,kBAAQC,0BAAgBC,KAAQC,kCCClCC,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJU,SAASC,eAAe,SHoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvE,MAAK,SAAAwE,GACJA,EAAaC,gBAEdpE,OAAM,SAAAC,GACLoE,QAAQpE,MAAMA,EAAME,a","file":"static/js/main.211d23e2.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(2),\n      display: \"flex\"\n    },\n  },\n}));\n\nexport default function SearchFormComponent(props) {\n  const classes = useStyles();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    //set state\n    e.preventDefault();\n    e.stopPropagation();\n    setSearchQuery(e.target.value);\n  }\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.root}>\n            <TextField\n            id=\"b-title\"\n            label=\"Title\"\n            style={{ margin: 8 }}\n            helperText=\"Type a book title and click Search...\"\n            fullWidth\n            margin=\"normal\"\n            //value={props.searchQuery}\n            onChange={handleInputChange}\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={props.handleSearchBook(searchQuery)}>\n                Search\n            </Button>\n        </div>\n    </form>\n  );\n}","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    cardMedia: {\n      paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n  }));\n\nconst conditionalActionRendering = (isSaved, book, handleRemoveBook, handleSaveBook) => {\n  if(isSaved){\n    return (\n      <CardActions>\n        <Link color=\"inherit\" href={book.link} target=\"_blank\" rel=\"noopener\">\n          <Button size=\"small\" color=\"primary\">\n            View Info\n          </Button>\n        </Link>\n        <Button size=\"small\" color=\"primary\" onClick={handleRemoveBook(book._id)}>\n            Remove\n        </Button>\n      </CardActions>\n    )\n  }\n  else{\n    return (\n      <CardActions>\n        <Link color=\"inherit\" href={book.link} target=\"_blank\" rel=\"noopener\">\n          <Button size=\"small\" color=\"primary\">\n            View Info\n          </Button>\n        </Link>\n        <Button size=\"small\" color=\"primary\" onClick={handleSaveBook(book.id)}>\n            Save\n        </Button>\n      </CardActions>\n    )\n  }\n}\n\nexport default function BookCard(props) {\n    const { book, isSaved, handleRemoveBook, handleSaveBook } = props;\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n                <CardMedia\n                className={classes.cardMedia}\n                // image=\"https://source.unsplash.com/random\"\n                image={book.image}\n                title=\"Image title\"\n                />\n                <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {book.title}\n                </Typography>\n                {/* <Typography>\n                    {book.description}\n                </Typography> */}\n                </CardContent>\n                { conditionalActionRendering(isSaved, book, handleRemoveBook, handleSaveBook) }\n            </Card>\n        </Grid>\n    );\n}","export const getLastBooks = (allBooks, numElem) => {\n    return allBooks.reverse().slice(0, numElem);\n};\n\nexport const reduceAPIData = (apiData) => {\n    const reduced = apiData.map((item,index) => {\n        return { \n            id: item.id, \n            authors: item.volumeInfo.authors, \n            description: item.volumeInfo.description, \n            image: item.volumeInfo.imageLinks.thumbnail,\n            link: item.volumeInfo.infoLink,\n            title: item.volumeInfo.title\n        }\n    })\n    return reduced;\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport SearchForm from \"../../components/search-form/SearchForm.component\";\nimport BookCard from \"../../components/book-card/BookCard.component\";\nimport { getLastBooks } from \"../../utils/helpers\";\n\n// CSS for Search view home page\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  navLink: {\n    padding: '20px'\n  },\n  noBooks: {\n    marginTop: theme.spacing(4),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        Google Search Book App\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nfunction RenderBookCard(books, displayRecentSaved, handleRemoveBook, handleSaveBook){\n  const classes = useStyles();\n  if(books.length > 0){\n    if(displayRecentSaved){\n      return (getLastBooks(books, 5).map((book, index) => (\n        <BookCard key={index} book={book} isSaved={displayRecentSaved} handleRemoveBook={handleRemoveBook} handleSaveBook={handleSaveBook} />\n      )))\n    }\n    else{\n      return (books.map((book, index) => (\n        <BookCard key={index} book={book} isSaved={displayRecentSaved} handleRemoveBook={handleRemoveBook} handleSaveBook={handleSaveBook} />\n      )))\n    }\n  }\n  else\n  {\n    return (\n      <Typography className={classes.noBooks} component=\"p\" align=\"left\" color=\"textSecondary\">\n        There are no saved books at the moment\n      </Typography>\n    )\n  }\n}\n\n\nexport default function HomePage(props) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          {/* <Link color=\"inherit\" href=\"/\"> */}\n            <MenuBookIcon className={classes.icon} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Google Books Search\n            </Typography>\n          {/* </Link> */}\n            <Typography component=\"p\" color=\"inherit\" noWrap>\n              <Link className={classes.navLink} color=\"inherit\" href=\"/saved\">Saved Books</Link>\n            </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"md\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Search a book!\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                A web application to help you find information about any book - using the powerful\n                Google Books API.\n                Type it, Find it, Save it.\n            </Typography>\n            <Grid container spacing={5} justify=\"center\">\n              <Grid item xs={12}>\n                <SearchForm \n                  handleSearchBook={props.handleSearchBook} \n                />\n              </Grid>\n          </Grid>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {props.displayRecentSaved ? \n            (<Typography component=\"h1\" variant=\"h4\" align=\"left\" color=\"textSecondary\" gutterBottom>\n              Recently Saved Books\n            </Typography>) :\n            <Typography component=\"h1\" variant=\"h4\" align=\"left\" color=\"textSecondary\" gutterBottom>\n              Search Results\n            </Typography>\n          }\n          <Grid container spacing={4}>\n            {RenderBookCard(props.books, props.displayRecentSaved, props.handleRemoveBook, props.handleSaveBook)}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}","export const BOOK_DBSEARCH_REQUEST = \"BOOK_DBSEARCH_REQUEST\";\nexport const BOOK_DBSEARCH_SUCCESS = \"BOOK_DBSEARCH_SUCCESS\";\nexport const BOOK_DBSEARCH_FAILURE = \"BOOK_DBSEARCH_FAILURE\";\n\nexport const BOOK_DBDELETE_REQUEST = \"BOOK_DBDELETE_REQUEST\";\nexport const BOOK_DBDELETE_SUCCESS = \"BOOK_DBDELETE_SUCCESS\";\nexport const BOOK_DBDELETE_FAILURE = \"BOOK_DBDELETE_FAILURE\";\n\nexport const BOOK_DBADD_REQUEST = \"BOOK_DBADD_REQUEST\";\nexport const BOOK_DBADD_SUCCESS = \"BOOK_DBADD_SUCCESS\";\nexport const BOOK_DBADD_FAILURE = \"BOOK_DBADD_FAILURE\";\n\n// google API constants\nexport const BOOK_GAPI_SEARCH_REQUEST = \"BOOK_GAPI_SEARCH_REQUEST\";\nexport const BOOK_GAPI_SEARCH_SUCCESS = \"BOOK_GAPI_SEARCH_SUCCESS\";\nexport const BOOK_GAPI_SEARCH_FAILURE = \"BOOK_GAPI_SEARCH_FAILURE\";\n","import { BOOK_DBSEARCH_REQUEST, BOOK_DBSEARCH_SUCCESS, BOOK_DBSEARCH_FAILURE } from \"./constants\";\nimport { BOOK_DBDELETE_REQUEST, BOOK_DBDELETE_SUCCESS, BOOK_DBDELETE_FAILURE } from \"./constants\";\nimport { BOOK_DBADD_REQUEST, BOOK_DBADD_SUCCESS, BOOK_DBADD_FAILURE } from \"./constants\";\nimport { BOOK_GAPI_SEARCH_REQUEST, BOOK_GAPI_SEARCH_SUCCESS, BOOK_GAPI_SEARCH_FAILURE } from \"./constants\";\nimport { API_KEY } from \"./utils/api_key\";\nimport { reduceAPIData } from \"./utils/helpers\";\nimport axios from \"axios\";\n\n//action: BOOK_DBSEARCH_SUCCESS once backend call is successfull\nconst searchSuccess = (savedBooks) => ({\n    type:    BOOK_DBSEARCH_SUCCESS,\n    isFetchingBooks: false,\n    payload: savedBooks,\n  });\n  \n//action: BOOK_DBSEARCH_FAILURE if backend call is unsuccessful\nconst searchFailed = (error) => ({\n  type:    BOOK_DBSEARCH_FAILURE,\n  isFetchingBooks: false,\n  payload: error,\n});\n\n//action: BOOK_DBSEARCH_REQUEST  to backend REST api\nexport const getAllSavedBooks = () => {\n    return (dispatch, getState) => {\n      //dispatch action to notify client\n      dispatch({\n          type: BOOK_DBSEARCH_REQUEST,\n          isFetchingBooks: true,\n        });\n      //use axios to query REST api\n      axios\n        .get(\"/api/books\")\n        .then( (response) => {\n          //if request is successful, update books state\n          if(response.status === 200){\n            dispatch(searchSuccess(response.data));\n          }\n        })\n        .catch( (error) => {\n          dispatch(searchFailed(error.message));\n        });\n    }\n  }\n\n\n// DB deletion\nconst removeSuccess = () => ({\n  type:    BOOK_DBDELETE_SUCCESS,\n  isRemovingBook: false,\n  isFetchingBooks: false,\n  payload: \"\"\n});\n\nconst removeFailure = (error) => ({\n  type:    BOOK_DBDELETE_FAILURE,\n  isRemovingBook: false,\n  isFetchingBooks: false,\n  payload: error\n});\n\n\n//action: BOOK_DBDELETE_REQUEST  to backend REST api\nexport const removeBookById = (bookid) => {\n  return (dispatch, getState) => {\n    //dispatch action to notify client\n    dispatch({\n        type: BOOK_DBDELETE_REQUEST,\n        isRemovingBook: true,\n      });\n    //use axios to query REST api\n    axios\n      .delete(\"/api/books/\" + bookid)\n      .then( (response) => {\n        //if request is successful, update books state\n        if(response.status === 200){\n          dispatch(removeSuccess());\n          dispatch(getAllSavedBooks());\n        }\n      })\n      .catch( (error) => {\n        dispatch(removeFailure(error.message));\n      });\n  }\n}\n\n// DB add\nconst addBookSuccess = () => ({\n  type:    BOOK_DBADD_SUCCESS,\n  isRemovingBook: false,\n  isFetchingBooks: false,\n  isAddingBook: false,\n  payload: \"\"\n});\n\nconst addBookFailure = (error) => ({\n  type:    BOOK_DBADD_FAILURE,\n  isRemovingBook: false,\n  isFetchingBooks: false,\n  isAddingBook: false,\n  payload: error\n});\n\nexport const addBookAttempt = (book) => {\n  return (dispatch, getState) => {\n    //dispatch action to notify client\n    dispatch({\n        type: BOOK_DBADD_REQUEST,\n        isAddingBook: true,\n      });\n    //use axios to query REST api\n    axios\n      .post(\"/api/books/\", book)\n      .then( (response) => {\n        //if request is successful, update books state\n        if(response.status === 200){\n          dispatch(addBookSuccess());\n        }\n      })\n      .catch( (error) => {\n        dispatch(addBookFailure(error.message));\n      });\n  }\n}\n\n\n//--------\n// Google API actions\n// -------\nconst searchGAPISuccess = (queryBooks) => ({\n  type:    BOOK_GAPI_SEARCH_SUCCESS,\n  isRemovingBook: false,\n  isFetchingBooks: false,\n  isAddingBook: false,\n  displayRecentSaved: false,\n  payload: queryBooks\n});\n\nconst searchGAPIFailure = (error) => ({\n  type:    BOOK_GAPI_SEARCH_FAILURE,\n  isRemovingBook: false,\n  isFetchingBooks: false,\n  isAddingBook: false,\n  displayRecentSaved: true,\n  payload: error\n});\n\nexport const searchGAPIBook = (query) => {\n  const cleanQuery = query.replace(/\\s+/g, '-').toLowerCase();\n  return (dispatch, getState) => {\n    //dispatch action to notify client\n    dispatch({\n        type: BOOK_GAPI_SEARCH_REQUEST,\n        isFetchingBooks: true,\n      });\n    //use axios to query REST api\n    axios\n      .get(\"https://www.googleapis.com/books/v1/volumes?q=\" + cleanQuery + \"&key=\" + API_KEY)\n      .then( (response) => {\n        //if request is successful, extract needed information and update books state\n        if(response.status === 200){\n          //readjust data and dispatch success action\n          dispatch(searchGAPISuccess(reduceAPIData(response.data.items)));\n        }\n      })\n      .catch( (error) => {\n        dispatch(searchGAPIFailure(error.message));\n      });\n  }\n}","import React, {useEffect} from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport HomePage from \"./Search.view\";\nimport { getAllSavedBooks, removeBookById, searchGAPIBook, addBookAttempt } from \"../../actions\";\n\n\nfunction SearchContainer() {\n    const dispatch = useDispatch();\n    // Loading State\n    const [books, displayRecentSaved] = useSelector((appState) => [\n        appState.books,\n        appState.displayRecentSaved\n    ]);\n    //useEffect\n    useEffect(() => {\n        //dispatch action to query DB\n        dispatch(getAllSavedBooks());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    //event handlers\n    const handleRemoveBook = (bookId) => (e) => {\n        e.preventDefault();\n        dispatch(removeBookById(bookId));\n    }\n\n    const handleSearchBook = (searchQuery) => (e) => {\n        e.preventDefault();\n        dispatch(searchGAPIBook(searchQuery));\n    }\n\n    const handleSaveBook = (bookId) => (e) => {\n        e.preventDefault();\n        const matchBook = books.filter((elem) => {\n            return elem.id === bookId\n        })\n        dispatch(addBookAttempt(matchBook[0]));\n    }\n    \n    return (\n    <HomePage \n        books={books} \n        handleRemoveBook={handleRemoveBook} \n        handleSearchBook={handleSearchBook}\n        displayRecentSaved={displayRecentSaved}\n        handleSaveBook={handleSaveBook}\n    />);\n}\n\nexport default SearchContainer;","import React from 'react';\nimport SearchContainer from \"./Search.container\";\n\nfunction Search() {\n  return <SearchContainer />;\n}\n\nexport default Search;\n","import Search from \"./Search\";\n\nexport default Search;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport BookCard from \"../../components/book-card/BookCard.component\";\nimport { getLastBooks } from \"../../utils/helpers\";\n\n// CSS for Search view home page\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  navLink: {\n    padding: '20px'\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  noBooks: {\n    marginTop: theme.spacing(4),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        Google Search Book App\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\n\nexport default function SavedPage(props) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          {/* <Link color=\"inherit\" href=\"/\"> */}\n            <MenuBookIcon className={classes.icon} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Google Books Search\n            </Typography>\n          {/* </Link> */}\n          <Typography component=\"p\" color=\"inherit\" noWrap>\n              <Link className={classes.navLink} color=\"inherit\" href=\"/\">Home</Link>\n            </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Typography component=\"h1\" variant=\"h4\" align=\"left\" color=\"textSecondary\" gutterBottom>\n            All Saved Books\n          </Typography>\n          <Grid container spacing={4}>\n            { props.books.length > 0 ? \n            getLastBooks(props.books, 5).map((book, index) => (\n              <BookCard key={index} book={book} isSaved={true} handleRemoveBook={props.handleRemoveBook}/>\n            )) : \n            <Typography className={classes.noBooks} component=\"p\" align=\"left\" color=\"textSecondary\">\n              There are no saved books at the moment\n            </Typography>}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport SavedPage from \"./Saved.view\";\nimport { getAllSavedBooks, removeBookById } from \"../../actions\";\n\n\nfunction SavedContainer() {\n    const dispatch = useDispatch();\n    // Loading State\n    const [books] = useSelector((appState) => [\n        appState.books\n    ]);\n    //useEffect\n    useEffect(() => {\n        //dispatch action to query DB\n        dispatch(getAllSavedBooks());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    //event handlers\n    const handleRemoveBook = (bookId) => (e) => {\n        e.preventDefault();\n        //dispatch action to remove book by ID\n        dispatch(removeBookById(bookId));\n    }\n\n    const handleSaveBook = (book) => (e) => {\n        e.preventDefault();\n        //dispatch action to remove book by ID\n        //dispatch(saveNewBook(book));\n    }\n\n    return <SavedPage books={books} handleRemoveBook={handleRemoveBook} handleSaveBook={handleSaveBook} />;\n}\n\nexport default SavedContainer;","import React from 'react';\nimport SavedContainer from \"./Saved.container\";\n\nfunction Saved() {\n  return <SavedContainer />;\n}\n\nexport default Saved;\n","import SearchBooks from \"./search\";\nimport SavedBooks from \"./saved\";\n\nexport default {\n    SearchBooks,\n    SavedBooks\n};\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Pages from \"./pages\";\n\nfunction App() {\n  // return <Pages.SearchBooks />;\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Pages.SearchBooks} />\n        <Route exact path=\"/saved\" component={Pages.SavedBooks} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { BOOK_DBSEARCH_REQUEST, BOOK_DBSEARCH_SUCCESS, BOOK_DBSEARCH_FAILURE } from \"./constants\";\nimport { BOOK_DBDELETE_REQUEST, BOOK_DBDELETE_SUCCESS, BOOK_DBDELETE_FAILURE } from \"./constants\";\nimport { BOOK_DBADD_REQUEST, BOOK_DBADD_SUCCESS, BOOK_DBADD_FAILURE } from \"./constants\";\nimport { BOOK_GAPI_SEARCH_REQUEST, BOOK_GAPI_SEARCH_SUCCESS, BOOK_GAPI_SEARCH_FAILURE } from \"./constants\";\n\nexport const initialState = {\n    isFetchingBooks: false,\n    isRemovinBook: false,\n    displayRecentSaved: true,\n    books: [],\n    error: \"\"\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case BOOK_DBSEARCH_REQUEST:\n            return {...state, isFetchingBooks: true, books: [], error: \"\"}\n\n        case BOOK_DBSEARCH_SUCCESS:\n            return {...state, isFetchingBooks: false, books: action.payload, error: \"\"}\n\n        case BOOK_DBSEARCH_FAILURE:\n            return {...state, isFetchingBooks: false, books: [], error: action.payload}\n\n        case BOOK_DBDELETE_REQUEST:\n            return {...state, isRemovingBook: action.isRemovingBook, error: \"\"}\n\n        case BOOK_DBDELETE_SUCCESS:\n            return {...state}\n\n        case BOOK_DBDELETE_FAILURE:\n            return {...state, isFetchingBooks: false, isRemovingBook: action.isRemovingBook, error: action.payload}\n\n        case BOOK_DBADD_REQUEST:\n            return {...state, isAddingBook: action.isAddingBook, error: \"\"}\n\n        case BOOK_DBADD_SUCCESS:\n            return {...state, isAddingBook: action.isAddingBook, error: \"\"}\n\n        case BOOK_DBADD_FAILURE:\n            return {...state, isAddingBook: action.isAddingBook, error: action.payload}\n\n        case BOOK_GAPI_SEARCH_REQUEST:\n            return {...state, isFetchingBooks: action.isFetchingBooks }\n\n        case BOOK_GAPI_SEARCH_SUCCESS:\n            return {...state, isFetchingBooks: action.isFetchingBooks, displayRecentSaved: action.displayRecentSaved, books: action.payload}\n\n        case BOOK_GAPI_SEARCH_FAILURE:\n            return {...state, isFetchingBooks: false, isRemovingBook: false, displayRecentSaved: true, error: action.payload}\n    \n        default:\n            return state;\n    }\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducer, { initialState } from './reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  reducer,\n  initialState,\n  compose(applyMiddleware(thunk), composeWithDevTools())\n);\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {Provider} from 'react-redux'\nimport store from \"./store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}